"use strict";(self.webpackChunknazake=self.webpackChunknazake||[]).push([[6356],{2304:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"gameplay-containers/creating-new-equipment","title":"Creating New Equipment Items","description":"This guide explains how to create equipment items for your game using the Gameplay Containers. The steps include setting up equipment definitions, configuring meshes, animations, and abilities, and spawning equipment actors for your game. Follow along to set up functional and dynamic equipment.","source":"@site/docs/gameplay-containers/creating-new-equipment.md","sourceDirName":"gameplay-containers","slug":"/gameplay-containers/creating-new-equipment","permalink":"/imnazake/docs/gameplay-containers/creating-new-equipment","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gameplay-containers/creating-new-equipment.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Creating New Items","permalink":"/imnazake/docs/gameplay-containers/creating-new-items"},"next":{"title":"Creating New Containers","permalink":"/imnazake/docs/gameplay-containers/creating-new-containers"}}');var s=t(4848),a=t(8453);const r={sidebar_position:3},o="Creating New Equipment Items",l={},c=[{value:"1. Create a Gameplay Equipment Definition Data Asset",id:"1-create-a-gameplay-equipment-definition-data-asset",level:2},{value:"Steps:",id:"steps",level:3},{value:"2. Set Up the Equipment Definition",id:"2-set-up-the-equipment-definition",level:2},{value:"Steps:",id:"steps-1",level:3},{value:"3. Configure Modular Meshes",id:"3-configure-modular-meshes",level:2},{value:"Steps:",id:"steps-2",level:3},{value:"4. Configure Animation Layers",id:"4-configure-animation-layers",level:2},{value:"Steps:",id:"steps-3",level:3},{value:"5. Configure Animation Montages",id:"5-configure-animation-montages",level:2},{value:"Steps:",id:"steps-4",level:3},{value:"6. Configure Abilities, Effects, and Attributes",id:"6-configure-abilities-effects-and-attributes",level:2},{value:"Steps:",id:"steps-5",level:3},{value:"7. Create an Equipment Actor",id:"7-create-an-equipment-actor",level:2},{value:"Steps:",id:"steps-6",level:3},{value:"8. Specify Equipment Spawning Info",id:"8-specify-equipment-spawning-info",level:2},{value:"Steps:",id:"steps-7",level:3},{value:"Configuring Equipment Attachment to Your Character/Pawn",id:"configuring-equipment-attachment-to-your-characterpawn",level:3}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"creating-new-equipment-items",children:"Creating New Equipment Items"})}),"\n",(0,s.jsxs)(n.p,{children:["This guide explains how to create equipment items for your game using the ",(0,s.jsx)(n.strong,{children:"Gameplay Containers"}),". The steps include setting up equipment definitions, configuring meshes, animations, and abilities, and spawning equipment actors for your game. Follow along to set up functional and dynamic equipment."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"1-create-a-gameplay-equipment-definition-data-asset",children:"1. Create a Gameplay Equipment Definition Data Asset"}),"\n",(0,s.jsxs)(n.p,{children:["Start by creating a ",(0,s.jsx)(n.strong,{children:"Gameplay Equipment Definition"})," data asset. This serves as the core definition for the equipment."]}),"\n",(0,s.jsx)(n.h3,{id:"steps",children:"Steps:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["In the Content Browser, right-click and select ",(0,s.jsx)(n.strong,{children:"Miscellaneous"})," > ",(0,s.jsx)(n.strong,{children:"Data Asset"})," > ",(0,s.jsx)(n.strong,{children:"GameplayEquipmentDefinition"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Name the asset (e.g., ",(0,s.jsx)(n.code,{children:"GED_MyItem"}),")."]}),"\n",(0,s.jsx)(n.li,{children:"Save the asset."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Gameplay Equipment Definition",src:t(4374).A+"",width:"1919",height:"1006"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"2-set-up-the-equipment-definition",children:"2. Set Up the Equipment Definition"}),"\n",(0,s.jsxs)(n.p,{children:["Configure the equipment definition to specify what ",(0,s.jsx)(n.strong,{children:"equipment instance"})," should spawn when the item is equipped or active."]}),"\n",(0,s.jsx)(n.h3,{id:"steps-1",children:"Steps:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Open the equipment definition asset."}),"\n",(0,s.jsxs)(n.li,{children:["Locate the ",(0,s.jsx)(n.strong,{children:"Instance Class"})," field and select the appropriate class that inherits from ",(0,s.jsx)(n.code,{children:"GameplayEquipmentInstance"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Save your configuration."}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"3-configure-modular-meshes",children:"3. Configure Modular Meshes"}),"\n",(0,s.jsxs)(n.p,{children:["If your game uses ",(0,s.jsx)(n.strong,{children:"modular meshes"})," for equipment, define which meshes should be used. Each mesh is identified by a ",(0,s.jsx)(n.strong,{children:"tag"})," for later lookup."]}),"\n",(0,s.jsx)(n.h3,{id:"steps-2",children:"Steps:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["In the equipment definition, locate the ",(0,s.jsx)(n.strong,{children:"Meshes"})," section."]}),"\n",(0,s.jsxs)(n.li,{children:["Add entries for the required modular meshes.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tag"}),": Assign a unique identifier for each mesh."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Mesh Reference"}),": Link the skeletal or static mesh."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Save the asset."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Modular Meshes Configuration",src:t(4374).A+"",width:"1919",height:"1006"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"4-configure-animation-layers",children:"4. Configure Animation Layers"}),"\n",(0,s.jsxs)(n.p,{children:["Define animation layers that should be linked when the equipment is equipped or unequipped. Animation layers are identified by ",(0,s.jsx)(n.strong,{children:"tags"})," for lookup."]}),"\n",(0,s.jsx)(n.h3,{id:"steps-3",children:"Steps:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["In the equipment definition, find the ",(0,s.jsx)(n.strong,{children:"Animation Layers"})," section."]}),"\n",(0,s.jsxs)(n.li,{children:["Add entries for each required animation layer.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tag"}),": Assign a unique tag for the layer."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Layer Class"}),": Specify the class of the animation layer to link."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Save the configuration."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Animation Layers Setup",src:t(4374).A+"",width:"1919",height:"1006"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"5-configure-animation-montages",children:"5. Configure Animation Montages"}),"\n",(0,s.jsxs)(n.p,{children:["Set up animation montages to play during equipment transitions such as equipping, unequipping, or switching items. These are especially useful for ",(0,s.jsx)(n.strong,{children:"hotbar"})," systems."]}),"\n",(0,s.jsx)(n.h3,{id:"steps-4",children:"Steps:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["In the equipment definition, navigate to the ",(0,s.jsx)(n.strong,{children:"Animation Montages"})," section."]}),"\n",(0,s.jsxs)(n.li,{children:["Add entries for each montage.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tag"}),": Assign a unique tag for the montage."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Montage Reference"}),": Link the animation montage asset."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Save the configuration."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Animation Montages Setup",src:t(4374).A+"",width:"1919",height:"1006"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"6-configure-abilities-effects-and-attributes",children:"6. Configure Abilities, Effects, and Attributes"}),"\n",(0,s.jsxs)(n.p,{children:["Create a ",(0,s.jsx)(n.strong,{children:"GameplayContainerAbilitySet"})," data asset to configure which ",(0,s.jsx)(n.strong,{children:"gameplay abilities"}),", ",(0,s.jsx)(n.strong,{children:"effects"}),", and ",(0,s.jsx)(n.strong,{children:"attributes"})," are granted to the player or object equipping the item. These are automatically removed upon unequipping."]}),"\n",(0,s.jsx)(n.h3,{id:"steps-5",children:"Steps:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["In the Content Browser, right-click and select ",(0,s.jsx)(n.strong,{children:"Miscellaneous"})," > ",(0,s.jsx)(n.strong,{children:"Data Asset"})," > ",(0,s.jsx)(n.strong,{children:"GameplayContainerAbilitySet"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Name the asset (e.g., ",(0,s.jsx)(n.code,{children:"AbilitySet_MyItem"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["Open the asset and configure:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Abilities"}),": Add gameplay ability classes."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Effects"}),": Add gameplay effect classes."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),": Add attribute sets."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Save the asset."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Ability Set Configuration",src:t(9567).A+"",width:"1921",height:"641"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"7-create-an-equipment-actor",children:"7. Create an Equipment Actor"}),"\n",(0,s.jsxs)(n.p,{children:["Create an actor that inherits from ",(0,s.jsx)(n.code,{children:"GameplayEquipment"}),". This represents the equipment in the game world, containing meshes to attach to the player when equipped and destroyed when unequipped."]}),"\n",(0,s.jsx)(n.h3,{id:"steps-6",children:"Steps:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Create a new actor class that inherits from ",(0,s.jsx)(n.code,{children:"GameplayEquipment"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Add the required meshes to the actor as components."}),"\n",(0,s.jsx)(n.li,{children:"Configure the collision settings for the meshes."}),"\n",(0,s.jsx)(n.li,{children:"Save the actor."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Gameplay Equipment Actor",src:t(544).A+"",width:"1921",height:"1006"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"8-specify-equipment-spawning-info",children:"8. Specify Equipment Spawning Info"}),"\n",(0,s.jsx)(n.p,{children:"Finally, configure how the equipment should spawn for the player, including actor details, attachment rules, and modular mesh information."}),"\n",(0,s.jsx)(n.h3,{id:"steps-7",children:"Steps:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["In the equipment definition asset, locate the ",(0,s.jsx)(n.strong,{children:"Spawning Info"})," section."]}),"\n",(0,s.jsxs)(n.li,{children:["Configure the following:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Actor Class"}),": Specify the equipment actor class to spawn."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attachment Rules"}),": Set rules for attachment (e.g., socket name, transform)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Meshes to Attach"}),": Define which meshes to use, identified by tags matching the character's mesh component tags."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Save the configuration."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Equipment Spawning Info",src:t(4374).A+"",width:"1919",height:"1006"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Important for the equipment to work properly"})}),"\n",(0,s.jsx)(n.h3,{id:"configuring-equipment-attachment-to-your-characterpawn",children:"Configuring Equipment Attachment to Your Character/Pawn"}),"\n",(0,s.jsx)(n.p,{children:"To ensure that the plugin can find and attach equipment to the correct mesh in your character or pawn, follow these steps:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Select the Mesh to Attach Equipment"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Open your ",(0,s.jsx)(n.strong,{children:"character"})," or ",(0,s.jsx)(n.strong,{children:"pawn class"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Identify the mesh you want to use for attaching equipment. Common examples include ",(0,s.jsx)(n.code,{children:"FirstPersonMesh"}),", ",(0,s.jsx)(n.code,{children:"ThirdPersonMesh"}),", or any other custom mesh you wish to use."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Add a Component Tag"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["For the mesh you've chosen, add a ",(0,s.jsx)(n.strong,{children:"component tag"})," to it. This tag is used by the plugin to identify and attach the equipment correctly."]}),"\n",(0,s.jsx)(n.li,{children:"Ensure that the tag you assign matches the tag defined in the equipment's configuration. This alignment ensures the plugin knows which mesh the equipment should be attached to."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:["Implement the ",(0,s.jsx)(n.code,{children:"IGameplayEquipmentInterface"})]}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["In order to facilitate the process of finding and interacting with the mesh by tag, implement the ",(0,s.jsx)(n.code,{children:"IGameplayEquipmentInterface"})," in your character or pawn class. This interface provides the necessary functionality to look up and use the mesh based on the assigned component tag."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Example Implementation"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Refer to the image below for a visual representation of how the mesh and tag should be set up."}),"\n",(0,s.jsx)(n.li,{children:"You can find an example implementation in the code below, which demonstrates how to use the tag and interface for attaching equipment to the correct mesh."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Character Mesh Component Tags",src:t(9093).A+"",width:"1923",height:"546"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"UMeshComponent* AMyCharacter::GetMeshComponentByTag(const FName ComponentTag) const\r\n{\r\n\treturn Cast<UMeshComponent>(FindComponentByTag(UMeshComponent::StaticClass(), ComponentTag));\r\n}\r\n\r\nvoid AMyCharacter::OnItemEquipped(const UGameplayItemDefinition* Item)\r\n{\r\n\tif (Item)\r\n\t{\r\n\t\t// You can also change equipment meshes here if you want to\r\n\t\t\r\n\t\tconst TSubclassOf<UAnimInstance> AnimLayer_FirstPerson = Item->GetFragmentByClass<UGameplayItemFragment_Equipment>()->GetEquipmentDefinition()->GetAnimationLayerInfoByTag(GameplayContainerTags::TAG_Perspective_FirstPerson_Equipment_AnimationLayer_Equipped).AnimationLayerClass;\r\n\t\tconst TSubclassOf<UAnimInstance> AnimLayer_ThirdPerson = Item->GetFragmentByClass<UGameplayItemFragment_Equipment>()->GetEquipmentDefinition()->GetAnimationLayerInfoByTag(GameplayContainerTags::TAG_Perspective_ThirdPerson_Equipment_AnimationLayer_Equipped).AnimationLayerClass;\r\n\r\n\t\tif (UAnimInstance* MyAnimInstance = FirstPersonMesh->GetAnimInstance())\r\n\t\t{\r\n\t\t\tMyAnimInstance->LinkAnimClassLayers(AnimLayer_FirstPerson);\r\n\t\t}\r\n\t\t\r\n\t\tif (const USkeletalMeshComponent* MyMesh = GetMesh())\r\n\t\t{\r\n\t\t\tif (UAnimInstance* MyAnimInstance = MyMesh->GetAnimInstance())\r\n\t\t\t{\r\n\t\t\t\tMyAnimInstance->LinkAnimClassLayers(AnimLayer_ThirdPerson);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvoid AMyCharacter::OnItemUnequipped(const UGameplayItemDefinition* Item)\r\n{\r\n\tif (Item)\r\n\t{\r\n\t\t// You can also change equipment meshes here if you want to\r\n\r\n\t\tconst TSubclassOf<UAnimInstance> AnimLayer_FirstPerson = Item->GetFragmentByClass<UGameplayItemFragment_Equipment>()->GetEquipmentDefinition()->GetAnimationLayerInfoByTag(GameplayContainerTags::TAG_Perspective_FirstPerson_Equipment_AnimationLayer_Unequipped).AnimationLayerClass;\r\n\t\tconst TSubclassOf<UAnimInstance> AnimLayer_ThirdPerson = Item->GetFragmentByClass<UGameplayItemFragment_Equipment>()->GetEquipmentDefinition()->GetAnimationLayerInfoByTag(GameplayContainerTags::TAG_Perspective_ThirdPerson_Equipment_AnimationLayer_Unequipped).AnimationLayerClass;\r\n\r\n\t\tif (UAnimInstance* MyAnimInstance = FirstPersonMesh->GetAnimInstance())\r\n\t\t{\r\n\t\t\tMyAnimInstance->LinkAnimClassLayers(AnimLayer_FirstPerson);\r\n\t\t}\r\n\t\t\r\n\t\tif (const USkeletalMeshComponent* MyMesh = GetMesh())\r\n\t\t{\r\n\t\t\tif (UAnimInstance* MyAnimInstance = MyMesh->GetAnimInstance())\r\n\t\t\t{\r\n\t\t\t\tMyAnimInstance->LinkAnimClassLayers(AnimLayer_ThirdPerson);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\n"})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},4374:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/02-62523e1322f7ced51dff1f05a6b18fd7.png"},9567:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/03-7277e58b7d340c72586b9f56202ed348.png"},544:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/04-1af0f73cf4f78e2286619184a53b6b8b.png"},9093:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/character-mesh-component-tags-b9c403f71998ecbd8d30d5ebb9cf4876.png"},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var i=t(6540);const s={},a=i.createContext(s);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);